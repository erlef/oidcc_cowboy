on:
  workflow_call:
    inputs:
      releaseName:
        required: false
        type: string
    secrets:
      HEX_API_KEY:
        required: false

name: "Publish"

jobs:
  hex_publish:
    name: rebar3 hex publish

    runs-on: ubuntu-latest

    if: "${{ inputs.releaseName }}"

    steps:
      - uses: actions/checkout@v5
      - uses: erlef/setup-beam@v1
        id: setupBEAM
        with:
          version-file: .tool-versions
          version-type: strict
      - uses: actions/cache@v4
        with:
          path: _build
          key: hex_publish-${{ runner.os }}-${{ steps.setupBEAM.outputs.otp-version }}-${{ hashFiles('rebar.config') }}
          restore-keys: |
            hex_publish-${{ runner.os }}-${{ steps.setupBEAM.outputs.otp-version }}-
      - run: rebar3 hex publish -r hexpm --yes
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}

  hex_build:
    name: rebar3 hex build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: erlef/setup-beam@v1
        id: setupBEAM
        with:
          version-file: .tool-versions
          version-type: strict
      - uses: actions/cache@v4
        with:
          path: _build
          key: hex_build-${{ runner.os }}-${{ steps.setupBEAM.outputs.otp-version }}-${{ hashFiles('rebar.config') }}
          restore-keys: |
            hex_build-${{ runner.os }}-${{ steps.setupBEAM.outputs.otp-version }}-
      - run: rebar3 hex build
      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: _build/default/lib/oidcc_cowboy/hex/oidcc_cowboy-*.tar

  upload:
    name: "Upload"

    runs-on: ubuntu-latest

    if: ${{ inputs.releaseName }}

    needs: ["hex_build"]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          name: package
          path: .
      - id: extract_raw_version
        run: |
          RAW_VERSION=$(echo "${{ inputs.releaseName }}" | sed 's/^v//')
          echo "RAW_VERSION=$RAW_VERSION" >> $GITHUB_OUTPUT
      - name: Upload
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload --clobber "${{ inputs.releaseName }}" \
            "oidcc_cowboy-${{ steps.extract_raw_version.outputs.RAW_VERSION }}.tar"
